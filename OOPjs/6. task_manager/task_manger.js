/**
 * –ó–∞–¥–∞–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 * –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –æ–ø–∏—Å–∞–Ω–∏–µ–º, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –∏ –¥–µ–¥–ª–∞–π–Ω–æ–º.

 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á:
	–ß–µ–º –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (1 - –≤—ã—Å–æ–∫–∏–π, 2 - —Å—Ä–µ–¥–Ω–∏–π, 3 - –Ω–∏–∑–∫–∏–π), —Ç–µ–º —Ä–∞–Ω—å—à–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–¥–∞—á–∞.

 * –ï—Å–ª–∏ —É –∑–∞–¥–∞—á –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–¥–µ—Ç –ø–æ –¥–µ–¥–ª–∞–π–Ω—É (—Ä–∞–Ω—å—à–µ —Å—Ä–æ–∫ ‚Äì 	–≤—ã—à–µ –≤ —Å–ø–∏—Å–∫–µ).

 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –≤–∞–∂–Ω–æ—Å—Ç–∏.
 * –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–¥–∞—á –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
 * –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏–∑ —Å–ø–∏—Å–∫–∞.
 * –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á (–∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è, –æ–ø–∏—Å–∞–Ω–∏—è, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∏ –¥–µ–¥–ª–∞–π–Ω–∞).

 * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ:
	–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ —Å–ø–∏—Å–æ–∫ –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤—ã–≤–∞—Ç—å—Å—è, —á—Ç–æ–±—ã 	—Å–∞–º–∞—è –≤–∞–∂–Ω–∞—è –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –ø–µ—Ä–≤–æ–π.
 */

class Task {
	constructor(taskName, description, priority, deadline) {
		this.title = taskName;
		this.description = description;
		this.priority = priority; // 1 - –≤—ã—Å–æ–∫–∏–π, 2 - —Å—Ä–µ–¥–Ω–∏–π, 3 - –Ω–∏–∑–∫–∏–π
		this.deadline = new Date(deadline);
		this.completed = false;
	}
}

class TaskManager {
	constructor() {
		this.tasks = [];
	}
	addTask(taskName, description, priority, deadline) {
		const newTask = new Task(taskName, description, priority, deadline);
		this.tasks.push(newTask);
		this.sortTask();
	}
	sortTask() {
		this.tasks.sort((a, b) => {
			if (a.priority !== b.priority) {
				return a.priority - b.priority;
			}
			return a.deadline - b.deadline;
		});
	}
	taskComplete(title) {
		const task = this.tasks.find(t => t.title === title);
		if (task) task.complete = true;
	}
	deleteCompletedTask() {
		this.tasks = this.tasks.filter(t => !t.completed);
	}
	listTasks() {
		console.log('\nüìã –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏:');
		this.tasks.forEach((task, index) => {
			let priorityIcon =
				task.priority === 1 ? 'üõë' : task.priority === 2 ? '‚úÖ' : 'üü¢';
			console.log(
				`[${index + 1}] ${priorityIcon} ${
					task.title
				} | –î–µ–¥–ª–∞–π–Ω: ${task.deadline.toDateString()} | –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${
					task.priority
				}`
			);
		});
	}
}

const taskManager = new TaskManager();
taskManager.addTask('–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã', '–ú–æ–ª–æ–∫–æ, —Ö–ª–µ–±, —è–π—Ü–∞', 2, '2025-03-10');
taskManager.addTask('–°–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç', '–ó–∞–∫–æ–Ω—á–∏—Ç—å –æ—Ç—á–µ—Ç', 1, '2025-03-08');
taskManager.addTask('–ü–æ–∑–≤–æ–Ω–∏—Ç—å –≤—Ä–∞—á—É', '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º', 3, '2025-03-15');

taskManager.listTasks(); // –í—ã–≤–µ–¥–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
